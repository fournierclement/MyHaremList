var express = require('express');
var cookie = require('cookie-session');
var bodyParser = require('body-parser');
var urlencodedParser = bodyParser.urlencoded({ extended: false });
var bcrypt = require('bcrypt');
var pg = require('pg');

var insertHarem = function(req,res,callback){

    if (req.session.login != req.params.iduser) {
        return res.status(401).send("You aren't authentified ");
    }
    else{
        pg.connect(process.env.DATABASE_URL,function(err,client,done){
            if (err) {
                console.log(err);
                return res.sendStatus(500);
            }
            client.query("INSERT INTO harems (nickname,haremname,haremdesc) VALUES ($1,$2,$3) RETURNING haremid",
                [req.params.iduser,req.body.haremName,req.body.haremDesc], function(err,result){
                done(client);
                if(err){
                    console.log(err);
                    return res.sendStatus(500);
                }
                return callback(req,res,result.rows[0].idharem);
            });
        });
    }
}
exports.insertHarem = insertHarem;

var deleteHarem = function(req,res,callback){
    if (req.session.login != req.params.iduser) {
        return res.status(401).send("You aren't authentified ");
    }
    else{
        pg.connect(process.env.DATABASE_URL,function(err,client,done){
            if (err) {
                console.log(err);
                return res.sendStatus(500);
            }
            client.query("DELETE FROM harems WHERE haremid = $1",
                [req.params.idharem], function(err,result){
                done(client);
                if(err){
                    console.log(err);
                    return res.sendStatus(500);
                }
                return callback(req,res);
            });
        });
    }
}
exports.deleteHarem = deleteHarem;

var insertWedding = function(req,res,callback){
    if (req.session.login != req.params.iduser) {
        return res.status(401).send("You aren't authentified ")
    }else{
        pg.connect(process.env.DATABASE_URL,function(err,client,done){
            if (err) {
                console.log(err);
                return res.sendStatus(500);
            }
            client.query("INSERT INTO weddings (haremid, charid, weddesc, favorite) VALUES ($1,$2,$3,$4)",
                [req.params.idharem, req.body.CharId, req.body.WedDesc, req.body.Favorite],
                function(err,result){
                done(client);
                if(err){
                    console.log(err);
                    return res.sendStatus(500);
                }
                return callback(req, res, req.body.CharId);
            });
        });
    }
}
exports.insertWedding = insertWedding;

var deleteWedding = function(req,res,callback){
    if (req.session.login != req.params.iduser) {
        return res.status(401).send("You aren't authentified ");
    }
    else{
        pg.connect(process.env.DATABASE_URL,function(err,client,done){
            if (err) {
                console.log(err);
                return res.sendStatus(500);
            }
            client.query("DELETE FROM weddings WHERE haremid = $1 AND charid = $2",
                [req.params.idharem,req.params.idwedding], function(err,result){
                done(client);
                if(err){
                    console.log(err);
                    return res.sendStatus(500);
                }
                return callback(req,res);
            });
        });
    }
}
exports.deleteWedding = deleteWedding;

//getWeddingsById(req,res,client,done,callback) -> (req,res,harem,weddings)
var getWeddingsById = function(req,res,client,done,harem,callback){
    client.query("SELECT characs.charname, characs.charid, weddesc,favorite FROM weddings, characs WHERE haremid = $1 AND weddings.charid = characs.charid",
        [req.params.idharem],function(err,result){
        done(client);
        if (err){
            console.log(err);
            return res.sendStatus(500);
        }
        return callback(req,res,harem,result.rows);
    });
}

//getHaremById(req,res,callback) -> callback(req,res,harem,weddings)
var getHaremById = function(req,res,callback){
    pg.connect(process.env.DATABASE_URL, function(err,client,done){
        if (err) {
            done(client);
            console.log(err);
            return res.sendStatus(500);
        }
        client.query("SELECT * FROM harems WHERE nickname=$1 AND haremid=$2",
            [req.params.iduser,req.params.idharem],function(err,result){
            if (err){
                done(client);
                console.log(err);
                return res.sendStatus(500);
            }
            return getWeddingsById(req,res,client,done,result.rows[0],callback);
        });
    });
}
exports.getHaremById = getHaremById;